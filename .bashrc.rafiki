# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth
# append to the history file, don't overwrite it
shopt -s histappend
# Add time stamp
export HISTTIMEFORMAT="%d/%m/%y %T "
# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize
export HISTSIZE=1000000
export GTK_THEME=Adwaita:dark

# User specific environment
if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:" ]]
then
    PATH="$HOME/.local/bin:$HOME/bin:$PATH"
fi
export PATH

# prompt
eval "$(starship init bash)"

# Aliases
[ -f ~/.aliases ] && source ~/.aliases
[ -f ~/.fzf.bash ] && source ~/.fzf.bash

unlock_strongbox () {
    sudo cryptsetup -v luksOpen /dev/sda1 strongbox
    sudo mount /dev/mapper/strongbox /mnt/strongbox
}
alias strongbox='cd /mnt/strongbox/'
alias renderman='cd /mnt/strongbox/projects/RendermanBuild'
# alias obsidian='cd ~/Documents/obsidian-vault'

# slurm
# alias sq='squeue -o "%.8i %.9P %.15j %.9u %.9a %.8T %.12L %.12l %.6D %.3m %.4C %.8R %.22b %e"'
# alias sdebug='srun --cpus-per-task=4 --ntasks-per-node=1 --job-name=debug --mem=16G --time=00:30:00 --pty /bin/bash'
# alias spast='sacct --starttime=$(date --date="today -1 week" +"%Y-%m-%d") --format=User,JobID,Jobname%50,partition,state,time,start,end,elapsed,MaxRss,MaxVMSize,nnodes,ncpus,nodelist'

# Activate spack
alias activate_spack='source ${HOME}/lib/spack/share/spack/setup-env.sh'

start_ssh_agent() {
    eval "$(ssh-agent -s)"
    ssh-add ~/.ssh/id_ed25519
}

# 1password agent sock binding only if local and non-root
if [[ ((EUID != 0 )) && ! ${SSH_TTY} && -z ${SSH_CLIENT} ]]; then
    export SSH_AUTH_SOCK=${HOME}/.1password/agent.sock
fi

# kitty
export PATH="${HOME}/.local/kitty.app/bin:${PATH}"

# neovim
# export PATH="${HOME}/lib/nvim-linux64/bin:${PATH}"
export PATH="${HOME}/lib/neovim/install/bin:${PATH}"

# golang
export GOPATH="${HOME}/lib/golang/go-latest"
export PATH="${GOPATH}/bin:${PATH}"

# rust
. "$HOME/.cargo/env"

# cuda
# export PATH="/usr/local/cuda/bin:${PATH}"
# export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/usr/local/cuda/lib64"
# export CMAKE_PREFIX_PATH="/usr/local/cuda:${CMAKE_PREFIX_PATH}"

# zig
export PATH="/home/lento/lib/ziglang/zig-latest:${PATH}"
# export PATH="/home/lento/lib/ziglang/zls/zig-out/bin:${PATH}"

# conda
if [ -f "/home/lento/lib/miniforge3/etc/profile.d/conda.sh" ]; then
    . "/home/lento/lib/miniforge3/etc/profile.d/conda.sh"
fi

# xrandr --output "DP-5" --mode "1920x1200" --left-of "DP-2"

# # mess
# source /home/lento/projects/se/mess/completions/mess.bash

# nvm / node
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH=$BUN_INSTALL/bin:$PATH

# Terraform, aws
complete -C /home/lento/lib/golang/go1.23.0/bin/terraform terraform
. <(awsmyid completion)

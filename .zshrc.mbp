# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# iterm2
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# oh-my-zsh
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="powerlevel10k/powerlevel10k"
CASE_SENSITIVE="true"
plugins=(git)
source $ZSH/oh-my-zsh.sh

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# homebrew
export PATH="/opt/homebrew/bin:$PATH"
export PATH="/opt/homebrew/sbin:$PATH"
export LD_LIBRARY_PATH=/opt/homebrew/lib:$LD_LIBRARY_PATH
export CPATH=/opt/homebrew/include:$CPATH
export LDFLAGS="-L/opt/homebrew/lib"
export CPPFLAGS="-I/opt/homebrew/include"

# language environment
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# gnu coreutils
COREUTILS_VER=9.4
export PATH=/opt/homebrew/Cellar/coreutils/${COREUTILS_VER}/libexec/gnubin:$PATH
export MANPATH=/opt/homebrew/Cellar/coreutils/${COREUTILS_VER}/libexec/gnuman:$MANPATH
export PATH=/opt/homebrew/Cellar/gnu-getopt/2.39.2/bin:$PATH

# colors
if [ -x /opt/homebrew/Cellar/coreutils/${COREUTILS_VER}/libexec/gnubin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(gdircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi
unset COREUTILS_VER


# Created by `pipx` on 2022-07-07 09:28:35
export PATH="$PATH:/Users/lento/.local/bin"

# ssh
DEFAULT_USER=$USER
export SSH_KEY_PATH="~/.ssh/id_ed25519"
alias add_ssh_key='ssh-add -K ~/.ssh/id_ed25519 &> /dev/null'

# awesome aliases
[ -f ~/.aliases ] && source ~/.aliases

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# rust
. "$HOME/.cargo/env"

# >>> mamba initialize >>>
# !! Contents within this block are managed by 'mamba init' !!
export MAMBA_EXE="/opt/homebrew/opt/micromamba/bin/micromamba";
export MAMBA_ROOT_PREFIX="/Users/lento/lib/micromamba";
__mamba_setup="$("$MAMBA_EXE" shell hook --shell zsh --prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__mamba_setup"
else
    if [ -f "/Users/lento/lib/micromamba/etc/profile.d/micromamba.sh" ]; then
        . "/Users/lento/lib/micromamba/etc/profile.d/micromamba.sh"
    else
        export  PATH="/Users/lento/lib/micromamba/bin:$PATH"  # extra space after export prevents interference from conda init
    fi
fi
unset __mamba_setup
# <<< mamba initialize <<<

# c++
activate_llvm() {
  export PATH="/opt/homebrew/opt/llvm/bin:$PATH"
  export LDFLAGS="-L/opt/homebrew/opt/llvm/lib"
  export CPPFLAGS="-I/opt/homebrew/opt/llvm/include"
}

# zig
export PATH="/Users/lento/lib/zig/zig-latest:${PATH}"
export PATH="/Users/lento/lib/zig/zls/zig-out/bin:${PATH}"

# golang
export GOPATH="/Users/lento/lib/go"
export PATH="${GOPATH}/bin:${PATH}"

# mess
source /Users/lento/projects/mess/completions/mess.bash

